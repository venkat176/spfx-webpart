import { ODataParser, ODataParserBase } from "./core";
export declare class ODataDefaultParser extends ODataParserBase<any> {
}
export declare function ODataValue<T>(): ODataParser<T>;
export declare class ODataRawParserImpl extends ODataParserBase<any> {
    protected parseImpl(r: Response, resolve: (value: any) => void): void;
}
export declare let ODataRaw: ODataRawParserImpl;
export declare class TextFileParser extends ODataParserBase<string> {
    protected parseImpl(r: Response, resolve: (value: any) => void): void;
}
export declare class BlobFileParser extends ODataParserBase<Blob> {
    protected parseImpl(r: Response, resolve: (value: any) => void): void;
}
export declare class JSONFileParser extends ODataParserBase<any> {
    protected parseImpl(r: Response, resolve: (value: any) => void): void;
}
export declare class BufferFileParser extends ODataParserBase<ArrayBuffer> {
    protected parseImpl(r: Response, resolve: (value: any) => void): void;
}
